function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto IF0
goto IFEND0
label IF0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto ELSEEND0
label IFEND0
label ELSE0
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label ELSEEND0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto IF1
goto IFEND1
label IF1
push this 4
push this 5
add
pop this 4
goto ELSEEND1
label IFEND1
label ELSE1
push this 4
push this 6
add
pop this 4
push this 9
if-goto IF2
goto IFEND2
label IF2
push this 7
if-goto IF3
goto IFEND3
label IF3
push this 0
push constant 4
add
pop this 0
goto ELSEEND2
label IFEND3
label ELSE2
push this 1
push constant 4
add
pop this 1
label ELSEEND2
goto ELSEEND3
label IFEND2
label ELSE3
push this 7
if-goto IF4
goto IFEND4
label IF4
push this 0
push constant 4
sub
pop this 0
goto ELSEEND4
label IFEND4
label ELSE4
push this 1
push constant 4
sub
pop this 1
label ELSEEND4
label ELSEEND3
label ELSEEND1
push this 8
if-goto IF5
goto IFEND5
label IF5
push this 7
if-goto IF6
goto IFEND6
label IF6
push this 1
push constant 4
add
pop this 1
goto ELSEEND5
label IFEND6
label ELSE5
push this 0
push constant 4
add
pop this 0
label ELSEEND5
goto ELSEEND6
label IFEND5
label ELSE6
push this 7
if-goto IF7
goto IFEND7
label IF7
push this 1
push constant 4
sub
pop this 1
goto ELSEEND7
label IFEND7
label ELSE7
push this 0
push constant 4
sub
pop this 0
label ELSEEND7
label ELSEEND6
push this 0
push this 10
gt
not
if-goto IF8
goto IFEND8
label IF8
push constant 1
pop this 14
push this 10
pop this 0
label IFEND8
push this 0
push this 11
lt
not
if-goto IF9
goto IFEND9
label IF9
push constant 2
pop this 14
push this 11
pop this 0
label IFEND9
push this 1
push this 12
gt
not
if-goto IF10
goto IFEND10
label IF10
push constant 3
pop this 14
push this 12
pop this 1
label IFEND10
push this 1
push this 13
lt
not
if-goto IF11
goto IFEND11
label IF11
push constant 4
pop this 14
push this 13
pop this 1
label IFEND11
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto IF12
goto IFEND12
label IF12
push constant 10
pop local 4
goto ELSEEND8
label IFEND12
label ELSE8
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto IF13
goto IFEND13
label IF13
push constant 20
pop local 4
goto ELSEEND9
label IFEND13
label ELSE9
push constant 5
pop local 4
label ELSEEND9
label ELSEEND8
push this 14
push constant 1
eq
if-goto IF14
goto IFEND14
label IF14
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto ELSEEND10
label IFEND14
label ELSE10
push this 14
push constant 2
eq
if-goto IF15
goto IFEND15
label IF15
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto ELSEEND11
label IFEND15
label ELSE11
push this 14
push constant 3
eq
if-goto IF16
goto IFEND16
label IF16
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto ELSEEND12
label IFEND16
label ELSE12
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label ELSEEND12
label ELSEEND11
label ELSEEND10
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
